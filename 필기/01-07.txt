환경설정

1.비주얼스튜이도코드 툴사용해서 스프링부트 설정 + React.js[ECMAScript:Vue.js, Node.js+TypeScript]
확장프로그램 추가 설치
-Java Extension Pack (java언어 지원, maven 기반 프로젝트 관리)
모듈 사이에 의존관계 - 메이븐
안드로이드 - 그레이들

바벨설정
웹팩설정


2.넥사크로설정 + 스프링 부트 연계

3.파이썬




리액트 코딩
XXX.jsx

아래 두개를 import해야함
import React from 'react';
import ReactDOM from 'react-dom';
class Main extends React.Component{ //자바스크립트에서 객체 선언
//리액트 컴포넌트를 상속받아서 생성
    //render메소드를 정의할 수 있다.
    //출력을 내보낼 페이지를 반환
    render(){
        return <div className="main">메인 페이지</div>;
    }
}
//여기서 화면에 내보내질 위치(root)정보 Main클래스에 정의된 페이지를 렌더링을 요청하는 문장
ReactDOM.render(<Main/>,document.getElementById('root'));

리액트를 개발할 때 create-react-app이라는 도구를 사용할 수 있지만
스프링과 연계가 불가하다.
다른 방법으로 문제를 해결해야 한다.
바벨 오픈소스 사용 - 성공
웹팩 환경 설정추가 - 리액트 개발시 최신 자바스크립트 언어를 사용해서 JSP에 포함할 XXX.js파일을 만들기 위해서 설정필요

webpack.config.js 라는 파일을 추가했다.
리액트 파일의 물리적인 위치 정보
src/main/jsx

여기에 만들어진 리액트 파일을 등록하기
main: './MainPage/jsx'

자바스크립트에 대한 컨버전 작업 필요함.

jsx - js로 만들어 주어야 브라우저가 실행할 수 있다

웹팩
node_modules\.bin\webpack -- watch -d
를 실행하면 webpack.config.js에 설정한 대로 정상적으로 빌드가 되어서
src/main/webapp/js/react 아래 main.bundle.js 라는 파일이 생긴다
스크립트 명령을 사용하여 처리하려고 했다.
쉘프로그램에서 스크립트 보안이 강화되어서 인증문제를 걸고 넘어진다.

리액트 활용 분야
SI 나 SM 업무시스템 쪽 보다는

트위터, 쇼셜미디어, 화면에 대한 갱신이 빈번하게 발생되는 페이지의 경우에 필요한 스크립트 언어이다.

페이지에 대한 갱신이 빈번하지 않다면 ajax를 이용해도 큰 문제 없다

웹 서버의 하루 데이터 사용량에 대한 제약이 있다보니까 이런 기술이 요구되게 되었다.

